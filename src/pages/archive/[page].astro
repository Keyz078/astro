---
// archive.astro
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';

const posts = await getCollection('blog', ({ data }) => !data.isDraft);

// Group by year & month
function groupPosts(posts) {
  const grouped = {};
  posts.forEach(post => {
    const date = new Date(post.data.date);
    const year = date.getFullYear();
    const month = date.toLocaleString('default', { month: 'long' });

    if (!grouped[year]) grouped[year] = {};
    if (!grouped[year][month]) grouped[year][month] = [];
    grouped[year][month].push(post);
  });
  return grouped;
}

const groupedPosts = groupPosts(posts);
---

<BaseLayout pageTitle="Archive">
  <h1 class="!mt-0 text-3xl font-bold mb-4">Archive</h1>

  {Object.entries(groupedPosts).sort((a, b) => b[0] - a[0]).map(([year, months]) => (
    <section>
      <h2 class="text-2xl font-semibold mt-8">{year}</h2>
      {Object.entries(months).sort((a, b) => {
        // urutkan berdasarkan bulan
        const monthOrder = new Date(`${a[0]} 1, 2000`) - new Date(`${b[0]} 1, 2000`);
        return monthOrder;
      }).map(([month, posts]) => (
        <div class="mt-4">
          <h3 class="text-xl font-semibold">{month} <span class="text-sm text-gray-400">({posts.length})</span></h3>
          <ul class="list-disc list-inside">
            {posts.map(post => (
              <li>
                <a href={`/blog/${post.slug}/`} class="text-light-accent dark:text-dark-accent hover:underline">
                  {post.data.title}
                </a>
                <span class="text-sm text-gray-400 ml-2">
                  ({new Date(post.data.date).toLocaleDateString('id-ID', {
                    year: 'numeric', month: 'short', day: 'numeric'
                  })})
                </span>
              </li>
            ))}
          </ul>
        </div>
      ))}
    </section>
  ))}
</BaseLayout>
