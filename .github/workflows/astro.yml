# Nama workflow Anda, akan muncul di tab "Actions" GitHub
name: Deploy Astro site to Pages

on:
  # Jalankan saat push ke branch 'main'
  push:
    branches: ["main"]

  # Memungkinkan untuk dijalankan manual dari tab Actions
  workflow_dispatch:

# Memberikan izin yang diperlukan agar Aksi bisa men-deploy ke GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Mencegah beberapa deployment berjalan bersamaan
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  BUILD_PATH: "." # Biarkan default

jobs:
  # Job untuk membangun situs
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
        working-directory: ${{ env.BUILD_PATH }}

      # --- BAGIAN YANG DIPERBAIKI ---
      - name: Build with Astro and Pagefind
        run: |
          # Langkah 1: Build situs Astro dengan URL otomatis dari GitHub
          ${{ steps.detect-package-manager.outputs.runner }} astro build \
            --site "${{ steps.pages.outputs.origin }}" \
            --base "${{ steps.pages.outputs.base_path }}"
          
          # Langkah 2: Jalankan Pagefind pada hasil build di folder 'dist'
          ${{ steps.detect-package-manager.outputs.runner }} pagefind --site "dist"
        working-directory: ${{ env.BUILD_PATH }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.BUILD_PATH }}/dist

  # Job untuk men-deploy hasil build
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
